name: Build and Publish to GHCR

on:
  workflow_call:
    secrets:
      ORGANIZATION:
        description: "Organization name for GHCR"
      PAT_TOKEN:
        description: "Personal Access Token with GHCR permissions"
      DISCORD_WEBHOOK:
        description: "Discord Webhook URL"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.ORGANIZATION }}
          password: ${{ secrets.PAT_TOKEN }} # only classic token

      - name: Determine Tag
        id: tag
        run: |
          if [[ "${GITHUB_REPOSITORY}" == "kakaotech-19/frontend" ]]; then
            if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
              echo "suffix=-dev" >> $GITHUB_ENV
            elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
              echo "suffix=-prod" >> $GITHUB_ENV
            else
              echo "Skipping build for branch: ${GITHUB_REF}"
              exit 1
            fi
          else
            echo "suffix=" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main') }}
          tags: ghcr.io/${{ secrets.ORGANIZATION }}/${{ github.repository }}${{ env.suffix }}:latest
          build-args: |
            ENV: ${{ github.ref == 'refs/heads/main' ? 'prod' : 'dev' }}

      - name: Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Build Result for ${{ github.repository }}"
          description: |
            ${{ job.status != 'success' && format('Failure at stage: {0}', job.status) || 'Build succeeded!' }}
          color: ${{ job.status == 'success' && '0x00ff00' || '0xff0000' }}
